{"name": "calc_binomial_probability", "description": "Calculates the probability of getting k successes in n trials.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of trials."}, "k": {"type": "integer", "description": "The number of successes."}, "p": {"type": "integer", "description": "The probability of success."}}, "required": ["n", "k", "p"]}}
{"name": "calculate_cosine_similarity", "description": "Calculates the cosine similarity of two vectors.", "parameters": {"type": "object", "properties": {"vectorA": {"type": "array", "items": {"type": "number"}, "description": "The first vector."}, "vectorB": {"type": "array", "items": {"type": "number"}, "description": "The second vector."}}, "required": ["vectorA", "vectorB"]}}
{"name": "calculate_density", "description": "Calculates the density of an object.", "parameters": {"type": "object", "properties": {"mass": {"type": "integer", "description": "The mass of the object."}, "volume": {"type": "integer", "description": "The volume of the object."}}, "required": ["mass", "volume"]}}
{"name": "calculate_displacement", "description": "Calculates the displacement of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}
{"name": "calculate_electrostatic_potential_energy", "description": "Calculates the electrostatic potential energy.", "parameters": {"type": "object", "properties": {"charge": {"type": "number", "description": "The charge of the object."}, "voltage": {"type": "number", "description": "The voltage of the object."}}, "required": ["charge", "voltage"]}}
{"name": "calculate_final_velocity", "description": "Calculates the final velocity of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}
{"name": "calculate_future_value", "description": "Calculates the future value of an investment.", "parameters": {"type": "object", "properties": {"present_value": {"type": "integer", "description": "The present value of the investment."}, "interest_rate": {"type": "integer", "description": "The interest rate of the investment."}, "periods": {"type": "integer", "description": "The number of periods."}}, "required": ["present_value", "interest_rate", "periods"]}}
{"name": "calculate_mean", "description": "Calculates the mean of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}
{"name": "calculate_permutations", "description": "Calculates the number of permutations of k elements from a set of n elements.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of elements in the set."}, "k": {"type": "integer", "description": "The number of elements to choose."}}, "required": ["n", "k"]}}
{"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}
{"name": "calculate_triangle_area", "description": "Calculates the area of a triangle given its base and height.", "parameters": {"type": "object", "properties": {"base": {"type": "integer", "description": "The base of the triangle."}, "height": {"type": "integer", "description": "The height of the triangle."}}, "required": ["base", "height"]}}
{"name": "convert_currency", "description": "Converts a given amount from one currency to another using the ExchangeRate-API.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "The amount of money to convert."}, "from_currency": {"type": "string", "description": "The ISO currency code for the base currency."}, "to_currency": {"type": "string", "description": "The ISO currency code for the target currency."}}, "required": ["amount", "from_currency", "to_currency"]}, "returns": {"type": "number", "description": "The converted amount in the target currency."}}
{"name": "estimate_derivative", "description": "Estimate the derivative of a function at a given point.", "parameters": {"type": "object", "properties": {"function": {"type": "function", "description": "The function to calculate the derivative of."}, "x": {"type": "integer", "description": "The point to calculate the derivative at."}}, "required": ["function", "x"]}}
{"name": "find_term_on_urban_dictionary", "description": "Finds the definition of a term on Urban Dictionary.", "parameters": {"type": "object", "properties": {"term": {"type": "string", "description": "The term to find the definition of."}}, "required": ["term"]}}
{"name": "geometry_area_circle", "description": "Calculates the area of a circle.", "parameters": {"type": "object", "properties": {"radius": {"type": "integer", "description": "The radius of the circle."}}, "required": ["radius"]}}
{"name": "get_active_covid_case_by_country", "description": "Finds the most up to date active cases of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the active cases of."}}, "required": ["country"]}}
{"name": "get_company_name_by_stock_name", "description": "Finds the company name of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}
{"name": "get_coordinate_by_ip_address", "description": "Finds the latitude and longitude of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}
{"name": "get_coordinates_from_city", "description": "Fetches the latitude and longitude of a given city name using the Maps.co Geocoding API.", "parameters": {"type": "object", "properties": {"city_name": {"type": "string", "description": "The name of the city."}}, "required": ["city_name"]}, "returns": {"type": "tuple", "description": "The latitude and longitude of the city."}}
{"name": "get_covid_death_by_country", "description": "Finds the most up to date total deaths of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the total deaths of."}}, "required": ["country"]}}
{"name": "get_distance", "description": "Calculates the distance between two 2D points.", "parameters": {"type": "object", "properties": {"pointA": {"type": "tuple", "description": "The first point."}, "pointB": {"type": "tuple", "description": "The second point."}}, "required": ["pointA", "pointB"]}}
{"name": "get_fibonacci_sequence", "description": "Calculates the n numbers of the Fibonacci.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of Fibonacci numbers to calculate."}}, "required": ["n"]}}
{"name": "get_price_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}
{"name": "get_prime_factors", "description": "Calculates the prime factors of a number.", "parameters": {"type": "object", "properties": {"number": {"type": "integer", "description": "The number to calculate the prime factors of."}}, "required": ["number"]}}
{"name": "get_product_name_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}
{"name": "get_rating_by_amazon_ASIN", "description": "Finds the rating of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}
{"name": "get_stock_history", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}, "interval": {"type": "string", "description": "The interval of the stock history. Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo"}, "diffandsplits": {"type": "boolean", "description": "The diffandsplits of the stock history. Allows one of following : true|false"}}, "required": ["stock_name", "interval"]}}
{"name": "get_stock_price_by_stock_name", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}
{"name": "get_time_zone_by_coord", "description": "Finds the timezone of a coordinate.", "parameters": {"type": "object", "properties": {"long": {"type": "string", "description": "The longitude of the coordinate."}, "lat": {"type": "string", "description": "The latitude of the coordinate."}}, "required": ["long", "lat"]}}
{"name": "get_weather_data", "description": "Fetches weather data from the Open-Meteo API for the given latitude and longitude.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "array", "items": {"type": "number"}, "description": "The latitude and longitude of the location."}}, "required": ["coordinates"]}, "returns": {"type": "float", "description": "The current temperature in the coordinates you've asked for"}}
{"name": "get_zipcode_by_ip_address", "description": "Finds the zipcode of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}
{"name": "mat_mul", "description": "Multiplies two matrices.", "parameters": {"type": "object", "properties": {"matA": {"type": "list", "description": "The first matrix."}, "matB": {"type": "list", "description": "The second matrix."}}, "required": ["matA", "matB"]}}
{"name": "math_factorial", "description": "Calculates the factorial of a number.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number to calculate the factorial of."}}, "required": ["n"]}}
{"name": "math_gcd", "description": "Calculates the greatest common divisor of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}
{"name": "math_lcm", "description": "Calculates the least common multiple of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}
{"name": "mortgage_calculator", "description": "Calculates the monthly mortgage payment.", "parameters": {"type": "object", "properties": {"loan_amount": {"type": "integer", "description": "The amount of the loan."}, "interest_rate": {"type": "integer", "description": "The interest rate of the loan."}, "loan_period": {"type": "integer", "description": "The period of the loan."}}, "required": ["loan_amount", "interest_rate", "loan_period"]}}
{"name": "quadratic_roots", "description": "Calculates the roots of a quadratic equation.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first coefficient."}, "b": {"type": "integer", "description": "The second coefficient."}, "c": {"type": "integer", "description": "The third coefficient."}}, "required": ["a", "b", "c"]}}
{"name": "retrieve_city_based_on_zipcode", "description": "Finds the city of a zipcode.", "parameters": {"type": "object", "properties": {"zipcode": {"type": "string", "description": "The zipcode of the product."}}, "required": ["zipcode"]}}
{"name": "retrieve_holiday_by_year", "description": "Finds the holidays of a year.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year of the holidays."}, "country": {"type": "string", "description": "The country of the holidays. Possible options: US, AT, DE, ES, FR, GB, IT, NL, PL, RO, SK, UA."}}, "required": ["year", "country"]}}
{"name": "sort_array", "description": "Sorts an array of numbers.", "parameters": {"type": "object", "properties": {"array": {"type": "array", "items": {"type": "number"}, "description": "The array of numbers."}, "reverse": {"type": "boolean", "description": "Whether to sort the array in reverse order.", "default": false}}, "required": ["array"]}}
{"name": "add_binary_numbers", "description": "Adds two binary numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "string", "description": "The first binary number."}, "b": {"type": "string", "description": "The second binary number."}}, "required": ["a", "b"]}}
{"name": "linear_regression", "description": "Finds the linear regression of a set of points and evaluates it at a given point.", "parameters": {"type": "object", "properties": {"x": {"type": "array", "description": "The x coordinates of the points.", "items": {"type": "number"}}, "y": {"type": "array", "description": "The y coordinates of the points.", "items": {"type": "number"}}, "point": {"type": "number", "description": "The point to calculate the linear regression at."}}, "required": ["x", "y", "point"]}}
{"name": "maxPoints", "description": "Finds the maximum number of points on a line.", "parameters": {"type": "object", "properties": {"points": {"type": "array", "items": {"type": "array", "items": {"type": "integer"}, "minItems": 2, "maxItems": 2, "description": "A point represented by a 2 element list [x, y]."}, "description": "The list of points. Points are 2 element lists."}}, "required": ["points"]}}
{"name": "calculate_investment_value", "description": "Calculates the value of an investment over time.", "parameters": {"type": "object", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "annual_contribution": {"type": "integer", "description": "The annual contribution amount."}, "years": {"type": "integer", "description": "The number of years to calculate the investment value for."}, "annual_return": {"type": "number", "description": "The annual return rate in percentage."}, "inflation_rate": {"type": "array", "items": {"type": "number"}, "description": "The inflation rate for each year in percentage."}, "adjust_for_inflation": {"type": "boolean", "default": true, "description": "Whether to adjust the investment value for inflation."}}, "required": ["initial_investment", "annual_contribution", "years", "annual_return", "inflation_rate"]}}
{"name": "calculate_nutritional_needs", "description": "Calculates the nutritional needs of a person based on their weight, height, age, gender, activity level, and goal.", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "The weight of the person in kilograms."}, "height": {"type": "number", "description": "The height of the person in centimeters."}, "age": {"type": "number", "description": "The age of the person in years."}, "gender": {"type": "string", "description": "The gender of the person. Possible options [male, female, other]."}, "activity_level": {"type": "number", "description": "The activity level of the person. Possible options [1,2,3,4,5]."}, "goal": {"type": "string", "description": "The goal of the person. Possible options [lose, gain, maintain]."}}, "required": ["weight", "height", "age", "gender", "activity_level", "goal"]}}
{"name": "book_room", "description": "Books a room for a customer.", "parameters": {"type": "object", "properties": {"room_type": {"type": "object", "description": "The room type to book."}, "check_in_date": {"type": "string", "description": "The check-in date in format of MM-DD-YYYY. "}, "check_out_date": {"type": "string", "description": "The check-out date in format of MM-DD-YYYY."}, "customer_id": {"type": "string", "description": "The customer ID."}, "discount_code": {"type": "string", "description": "The discount code (if any).", "default": null}}, "required": ["room_type", "check_in_date", "check_out_date", "customer_id"]}}
{"name": "order_food", "description": "Orders food for a customer.Return the total price.", "parameters": {"type": "object", "properties": {"item":{"type":"object","properties":{"type":"string","description":"the name of the product."}}},"quantity":{"type": "object", "properties": {"quantity":{"type":"object","properties":{"type":"string","description":"the number of the product purchased."}}},"price":{"type": "object", "properties": {"quantity":{"type":"object","properties":{"type":"string","description":"the number of the product purchased."}}}}}, "required": ["item","quantity","price"]}}
{"name": "get_movie_director", "description": "Fetches the director of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}
{"name": "get_movie_rating", "description": "Fetches the age rating of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}
{"name": "polygon_area", "description": "Calculate the area of a polygon given its vertices using the shoelace formula.", "parameters": {"type": "object", "properties": {"vertices": {"type": "array", "items": {"type": "array", "items": {"type": "number"}, "minItems": 2, "maxItems": 2, "description": "A single vertex represented by a 2 element list [x, y]."}, "description": "The vertices of the polygon, where each vertex is a 2 element list [x, y]."}}, "required": ["vertices"]}}
